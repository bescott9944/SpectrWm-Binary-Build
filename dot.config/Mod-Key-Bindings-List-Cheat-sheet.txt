#
#      ___ ___  ___ ____/ /______    ____ _    _______  ___  / _(_)__ _
#     (_-</ _ \/ -_) __/ __/ __/ |/|/ /  ' \  / __/ _ \/ _ \/ _/ / _ `/
#    /___/ .__/\__/\__/\__/_/  |__,__/_/_/_/  \__/\___/_//_/_//_/\_, /
#        /_/                                                     /___/
#                                     _                                       
#     |\/|  _   _|   |/  _        /   |_) o ._   _| o ._   _   _   |  o  _ _|_ 
#     |  | (_) (_|   |\ (/_ \/   /    |_) | | | (_| | | | (_| _>   |_ | _>  |_ 
#                           /                              _|                  
#              _                    __                  
#             /  |_   _   _. _|_   (_  |_   _   _ _|_ | 
#             \_ | | (/_ (_|  |_   __) | | (/_ (/_ |_ o 
#
#            +++++++++++++++++++++++++++++++++++++++++++++++++++
#             ++        SperctWN Window Manager              ++
#              +++   Mod Key Bindings List Cheat sheet!    +++
#             ++       6/14/2020 By Bruce E. Scott           ++
#            +++++++++++++++++++++++++++++++++++++++++++++++++++
#
#------------------------------------------------------------------------------
#					Define MOD Key
#------------------------------------------------------------------------------
# Mod key, (Windows key is Mod4) (Alt key is Mod1) (Apple key is Mod2)
 modkey = Mod1

#------------------------------------------------------------------------------
#				Predefined Key Bindings
#------------------------------------------------------------------------------
# This allows you to include pre-defined key bindings for your keyboard layout.
 keyboard_mapping = /dev/null

#------------------------------------------------------------------------------
#	    	Validated Default Programs:
#------------------------------------------------------------------------------

 program[terminator]        = terminator
 bind[terminator] 		    = MOD+Return

 program[sakura]        	= sakura
 bind[sakura] 		        = MOD+o

# program[menu]		= dmenu_run $dmenu_bottom -fn $bar_font -nb $bar_color -nf $bar_font_color -sb $bar_color_selected -sf $bar_font_color_selected
 program[menu]	        	= dmenu.sh
 bind[menu]		            = MOD+d
#  $dmenu_bottom -fn $bar_font -nb $bar_color -nf $bar_font_color -sb $bar_color_selected -sf $bar_font_color_selected

 program[search]	        = dmenu_run $dmenu_bottom -i -fn $bar_font -nb $bar_color -nf $bar_font_color -sb $bar_color_selected -sf $bar_font_color_selected
 bind[search_win]	        = MOD+g #f
 bind[search_workspace]	    = MOD+slash

 program[name_workspace]	= dmenu_run $dmenu_bottom -p Workspace -fn $bar_font -nb $bar_color -nf $bar_font_color -sb $bar_color_selected -sf $bar_font_color_selected
 bind[name_workspace]	    = MOD+Shift+slash

# To disable validation of the above, free the respective binding(s):
# bind[]		            = MOD+Shift+Delete	# disable lock
# bind[]		            = MOD+Shift+Return	# disable term
# bind[]		            = MOD+p			# disable menu


#------------------------------------------------------------------------------
#				User Defined Shortcuts:
#------------------------------------------------------------------------------
 
 program[rofi-dmenu] = /home/bruce/.config/rofi/rofi-dmenu-like.sh
 bind[rofi-dmenu]    = MOD+Control+o

 program[rofi-window] = /home/bruce/.config/rofi/rofi-window.sh
 bind[rofi-window]    = MOD+Control+y

 program[rofi-drun-icons] = /home/bruce/.config/rofi/rofi-drun.sh
 bind[rofi-drun-icons]    = MOD+Control+u
 
 program[rofi-combi-icons] = /home/bruce/.config/rofi/rofi-combi-icons.sh
 bind[rofi-combi-icons]    = MOD+Control+i

 program[key]           = xterm -e "/home/bruce/.config/spectrwm/keybind.sh"
 bind[key] 	            = MOD+Control+k

 program[pcmanfm]	    = pcmanfm
 bind[pcmanfm] 		    = MOD+control+p

 program[stterm]	    = stterm
 bind[stterm] 		    = MOD+control+s

 program[pavu]			= pavucontrol
 bind[pavu]		     	= MOD+Control+v

 program[google-chrome]	= google-chrome-stable
 bind[google-chrome]	= MOD+Control+w

 program[firefox]		= firefox
 bind[firefox]			= MOD+Shift+b

 program[editor]		= xed
 bind[editor]			= MOD+Control+e

# program[chromium]		= chromium
# bind[chromium]		= MOD+Control+w

 program[nemo]			= nemo
 bind [nemo]			= MOD+Control+f

# program[thunar]		= thunar
# bind [thunar]			= MOD+Control+t

 program[pmenu.py]		= pmenu.py
 bind [pmenu.py]		= MOD+Control+m

 program[gimp]			= gimp
 bind[gimp] 			= MOD+Control+g

 program[audacity]		= audacity
 bind[audacity]	    	= MOD+Control+a

program[clementine]		= clementine
 bind[clementine]		= MOD+Control+c

# ++++++++++++++++++++++++++++++++++++
# +      Screenshot Bindings         +
# ++++++++++++++++++++++++++++++++++++
 program[screenshot]	    = scrot '%m-%d-%Y-%R.png' -e 'mv $f ~/shots'
 bind[screenshot]		    = MOD+s

 program[screenshot_window]	= scrot -u '%m-%d-%Y-%R-w.png' -e 'mv $f ~/shots'
 bind[screenshot_window]	= MOD+Shift+s

# ++++++++++++++++++++++++++++++++++++
# +    Change Wallpaper Bindings     +
# ++++++++++++++++++++++++++++++++++++
 program[wallok]		=  xterm -e "/home/bruce/.config/spectrwm/wallok"
 bind[wallok]			= MOD+Control+b


#---------------------------------------------------------------------------------------------------
#						Window Manager Keybindings
#---------------------------------------------------------------------------------------------------
bind[version]		= MOD+Shift+v # Print WM Version # to bar
bind[bar_toggle]	= MOD+b

# ++++++++++++++++++++++++++++++++++++
# +         Cycle / Flip Order       +
# ++++++++++++++++++++++++++++++++++++
bind[cycle_layout]	= MOD+space
bind[flip_layout]	= MOD+Shift+backslash

# ++++++++++++++++++++++++++++++++++++
# +       Iconify / UnIconify        +
# ++++++++++++++++++++++++++++++++++++
bind[iconify]		= MOD+w
bind[uniconify]		= MOD+Shift+w

# ++++++++++++++++++++++++++++++++++++
# +         Swap Focus               +
# ++++++++++++++++++++++++++++++++++++
 bind[float_toggle]	= MOD+t
 bind[focus_main]	= MOD+m
 bind[focus_next]	= MOD+Tab
 bind[focus_next]	= MOD+j
 bind[focus_prev]	= MOD+Shift+Tab
 bind[focus_prev]	= MOD+Shift+k
 bind[focus_urgent]	= MOD+u

# ++++++++++++++++++++++++++++++++++++
# +         Stack Order              +
# ++++++++++++++++++++++++++++++++++++
bind[master_add]	= MOD+comma
bind[master_del]	= MOD+period

bind[stack_dec]		= MOD+Shift+period
bind[stack_inc]		= MOD+Shift+comma

bind[stack_reset]	= MOD+Shift+space
bind[swap_main]		= MOD+Shift+Return

bind[swap_next]		= MOD+Shift+j
bind[swap_prev]		= MOD+Shift+k

# ++++++++++++++++++++++++++++++++++++
# +         Grow / Srink             +
# ++++++++++++++++++++++++++++++++++++
bind[master_grow]	    = MOD+l
bind[master_shrink] 	= MOD+h
bind[maximize_toggle]	= MOD+e

 bind[width_grow]	= MOD+equal
 bind[width_shrink]	= MOD+minus

# ++++++++++++++++++++++++++++++++++++
# +        Kill - Quit - Reset       +
# ++++++++++++++++++++++++++++++++++++
 bind[wind_del]		= MOD+x
 bind[wind_kill]	= MOD+Shift+x

 bind[restart]		= MOD+Shift+r

 bind[quit]	     	= MOD+Shift+q

# ++++++++++++++++++++++++++++++++++++
# +       Move to Workspace          +
# ++++++++++++++++++++++++++++++++++++
 bind[mvws_1]		= MOD+Shift+1
 bind[mvws_2]		= MOD+Shift+2
 bind[mvws_3]		= MOD+Shift+3
 bind[mvws_4]		= MOD+Shift+4
 bind[mvws_5]		= MOD+Shift+5
 bind[mvws_6]		= MOD+Shift+6
 bind[mvws_7]		= MOD+Shift+7
 bind[mvws_8]		= MOD+Shift+8
 bind[mvws_9]		= MOD+Shift+9
 bind[mvws_10]		= MOD+Shift+0

# ++++++++++++++++++++++++++++++++++++
# +       Next Workspace             +
# ++++++++++++++++++++++++++++++++++++
 bind[ws_1]	    	= MOD+1
 bind[ws_2]	    	= MOD+2
 bind[ws_3]		    = MOD+3
 bind[ws_4]		    = MOD+4
 bind[ws_5]		    = MOD+5
 bind[ws_6]		    = MOD+6
 bind[ws_7]		    = MOD+7
 bind[ws_8]		    = MOD+8
 bind[ws_9]		    = MOD+9
 bind[ws_10]		= MOD+0
# ++++++++++++++++++++++++++++++++++++
 bind[ws_next]		= MOD+Right
 bind[ws_next_all]	= MOD+Up
 bind[ws_next_move]	= MOD+Shift+Up
 bind[ws_prev]		= MOD+Left
 bind[ws_prev_all]	= MOD+Down
 bind[ws_prev_move]	= MOD+Shift+Down
 bind[ws_prior]		= MOD+a

# ++++++++++++++++++++++++++++++++++++
# + Key bindings for United States (us) keyboards
# + unbind with: bind[] = <keys>
# ++++++++++++++++++++++++++++++++++++

 bind[bar_toggle_ws] = MOD+Shift+b
 bind[]      		 = MOD+v
 bind[height_grow]	 = MOD+Shift+equal
 bind[height_shrink]	= MOD+Shift+minus
 bind[move_down]		= MOD+Shift+bracketright
 bind[move_left]		= MOD+bracketleft
 bind[move_right]	= MOD+bracketright
 bind[move_up]		= MOD+Shift+bracketleft
 # bind[mvrg_1]		= MOD+Shift+KP_End
 # bind[mvrg_2]		= MOD+Shift+KP_Down
 # bind[mvrg_3]		= MOD+Shift+KP_Next
 # bind[mvrg_4]		= MOD+Shift+KP_Left
 # bind[mvrg_5]		= MOD+Shift+KP_Begin
 # bind[mvrg_6]		= MOD+Shift+KP_Right
 # bind[mvrg_7]		= MOD+Shift+KP_Home
 # bind[mvrg_8]		= MOD+Shift+KP_Up
 # bind[mvrg_9]		= MOD+Shift+KP_Prior
 # bind[rg_1]		    = MOD+KP_End
 # bind[rg_2]	    	= MOD+KP_Down
 # bind[rg_3]		    = MOD+KP_Next
 # bind[rg_4]		    = MOD+KP_Left
 # bind[rg_5]		    = MOD+KP_Begin
 # bind[rg_6]		    = MOD+KP_Right
 # bind[rg_7]		    = MOD+KP_Home
 # bind[rg_8]		    = MOD+KP_Up
 # bind[rg_9]		    = MOD+KP_Prior
 # bind[rg_next]		= MOD+Shift+Right
 # bind[rg_prev]		= MOD+Shift+Left
 # bind[screenshot_all]	= MOD+s
 # bind[screenshot_wind]	= MOD+Shift+s

 # bind[stack_dec]		= MOD+Shift+period
 # bind[stack_inc]		= MOD+Shift+comma
 # bind[stack_reset]	= MOD+Shift+space
 # bind[swap_main]		= MOD+Shift+Return
 # bind[swap_next]		= MOD+Shift+j
 # bind[swap_prev]		= MOD+Shift+k

 # bind[width_grow]	    = MOD+equal
 # bind[width_shrink]	= MOD+minus
 # bind[wind_del]		= MOD+x
 # bind[wind_kill]		= MOD+Shift+x

# ++++++++++++++++++++++++++++++++++++
# +     Mouseover: focus window      +
# ++++++++++++++++++++++++++++++++++++
 # Mouseover: focus window
 # Mod+LeftClick+Drag: move window (and float it if tiled)
 # Meta+RightClick+Drag: resize floating window
 # Meta+Shift+RightClick+Drag: resize floating window keeping it centred

